<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-US"><generator uri="https://jekyllrb.com/" version="3.4.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" hreflang="en-US" /><updated>2017-09-08T15:06:11+03:00</updated><id>http://localhost:4000/</id><title type="html">this.pavelluz.blog</title><subtitle></subtitle><entry><title type="html">SPA for city temperature</title><link href="http://localhost:4000/2017/09/08/weather-react-redux.html" rel="alternate" type="text/html" title="SPA for city temperature" /><published>2017-09-08T00:00:00+03:00</published><updated>2017-09-08T00:00:00+03:00</updated><id>http://localhost:4000/2017/09/08/weather-react-redux</id><content type="html" xml:base="http://localhost:4000/2017/09/08/weather-react-redux.html">&lt;p&gt;Writing simple SPA to determine weather based on current location and able to add any other city and get their weather too.
Used React-Redux stack, for easy store managment, subscribe to keep user data locally. Write some unit test using Jest + Enzyme, not much but still. For styling used LESS, so it was a proposal.&lt;/p&gt;

&lt;p&gt;Deployment on firebase as always &lt;a href=&quot;https://weather-react-redux.firebaseapp.com/&quot; title=&quot;link to firebase&quot; target=&quot;_blank&quot;&gt;link&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Writing simple SPA to determine weather based on current location and able to add any other city and get their weather too. Used React-Redux stack, for easy store managment, subscribe to keep user data locally. Write some unit test using Jest + Enzyme, not much but still. For styling used LESS, so it was a proposal.</summary></entry><entry><title type="html">Tic-Tac-Toe from scratch</title><link href="http://localhost:4000/2017/06/20/react-toe.html" rel="alternate" type="text/html" title="Tic-Tac-Toe from scratch" /><published>2017-06-20T00:00:00+03:00</published><updated>2017-06-20T00:00:00+03:00</updated><id>http://localhost:4000/2017/06/20/react-toe</id><content type="html" xml:base="http://localhost:4000/2017/06/20/react-toe.html">&lt;p&gt;Finally end up with “unbeatable” AI for tic-tac-toe game, had used negamax algorithm with alpha-beta pruning. Whole app build on plain React, no jQuire or any additional libraryes was used.&lt;/p&gt;

&lt;p&gt;It was quite challenging for me(with algorithm) though possible not to use OOP but functions :)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/react-toe.png&quot; alt=&quot;game pic&quot; class=&quot;img-responsive&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Deployment on firebase as always &lt;a href=&quot;https://react-toe.firebaseapp.com/&quot; title=&quot;link to firebase&quot; target=&quot;_blank&quot;&gt;link&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Finally end up with “unbeatable” AI for tic-tac-toe game, had used negamax algorithm with alpha-beta pruning. Whole app build on plain React, no jQuire or any additional libraryes was used.</summary></entry><entry><title type="html">Js Calc</title><link href="http://localhost:4000/2017/05/24/jsCalc.html" rel="alternate" type="text/html" title="Js Calc" /><published>2017-05-24T00:00:00+03:00</published><updated>2017-05-24T00:00:00+03:00</updated><id>http://localhost:4000/2017/05/24/jsCalc</id><content type="html" xml:base="http://localhost:4000/2017/05/24/jsCalc.html">&lt;p&gt;Continue building apps with React! Pray to all gods of ‘Mathematics’ here is JS calculator. Nice and clean, simple and working(I hope correct).
Link to deployment at &lt;a href=&quot;https://jscalc-b7ad8.firebaseapp.com/&quot; title=&quot;firebase url&quot; target=&quot;_blank&quot;&gt;Firebase&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/calc.png&quot; alt=&quot;that's how it look like&quot; class=&quot;img-responsive&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Continue building apps with React! Pray to all gods of ‘Mathematics’ here is JS calculator. Nice and clean, simple and working(I hope correct). Link to deployment at Firebase</summary></entry><entry><title type="html">build Pomodoro timer</title><link href="http://localhost:4000/2017/05/11/pomodoro.html" rel="alternate" type="text/html" title="build Pomodoro timer" /><published>2017-05-11T00:00:00+03:00</published><updated>2017-05-11T00:00:00+03:00</updated><id>http://localhost:4000/2017/05/11/pomodoro</id><content type="html" xml:base="http://localhost:4000/2017/05/11/pomodoro.html">&lt;p&gt;Finished another react application - Pomodoro clock. Built this project completely from scratch. To keep things simple I’d managed all app in single componet, maybe it is not the best solution, but makes all logic visible and easy to reason about.
&lt;img src=&quot;/assets/images/pomodoro.png&quot; alt=&quot;that's how it look like&quot; class=&quot;img-responsive&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Link to deployment at &lt;a href=&quot;https://pomodoro-88866.firebaseapp.com/&quot; title=&quot;firebase url&quot; target=&quot;_blank&quot;&gt;Firebase&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Finished another react application - Pomodoro clock. Built this project completely from scratch. To keep things simple I’d managed all app in single componet, maybe it is not the best solution, but makes all logic visible and easy to reason about.</summary></entry><entry><title type="html">Done with React course.</title><link href="http://localhost:4000/2017/04/23/reactTraining.html" rel="alternate" type="text/html" title="Done with React course." /><published>2017-04-23T00:00:00+03:00</published><updated>2017-04-23T00:00:00+03:00</updated><id>http://localhost:4000/2017/04/23/reactTraining</id><content type="html" xml:base="http://localhost:4000/2017/04/23/reactTraining.html">&lt;p&gt;Just retake nice and well-made &lt;a href=&quot;https://tylermcginnis.com/&quot; title=&quot;Tyler's homepage&quot; target=&quot;_blank&quot;&gt;Tyler McGinnis’s&lt;/a&gt; coure by creating github battle page. Rewrite it in modern(by now) ES6 syntax, this cover also React Router and Axios.&lt;/p&gt;

&lt;p&gt;Source code &lt;a href=&quot;https://github.com/gitpash/ReactTraining/tree/master/github-battleV2&quot; title=&quot;github source code&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt; &lt;br /&gt; 
In action at &lt;a href=&quot;https://gitbattle.firebaseapp.com/&quot; title=&quot;firebase url&quot; target=&quot;_blank&quot;&gt;Firebase&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Just retake nice and well-made Tyler McGinnis’s coure by creating github battle page. Rewrite it in modern(by now) ES6 syntax, this cover also React Router and Axios.</summary></entry><entry><title type="html">Develop first React-Based-App.</title><link href="http://localhost:4000/2017/04/20/wiki.html" rel="alternate" type="text/html" title="Develop first React-Based-App." /><published>2017-04-20T00:00:00+03:00</published><updated>2017-04-20T00:00:00+03:00</updated><id>http://localhost:4000/2017/04/20/wiki</id><content type="html" xml:base="http://localhost:4000/2017/04/20/wiki.html">&lt;p&gt;Now I’m working on FCC pojects for claiming the Front-End Certificate&lt;/p&gt;

&lt;p&gt;and figured out that almost all of them(projects) just ‘copy-paste’ version of provided for reverse engineering ones.
I wouldn’t blame anyone, just think to myself how to implement actual ‘code-standarts’ for my projects. 
So the task is clear - just build a wikipedia viewer which will show articles and link you to the source. 
I’ve decided to implenemt this using React and &lt;a href=&quot;https://github.com/mzabriskie/axios&quot; target=&quot;_blank&quot;&gt;Axios&lt;/a&gt; (with fetch, promises and Blackjack) for AJAX request(not bearded-jQuery-stuff)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://wikipsearch.herokuapp.com&quot; target=&quot;_blank&quot;&gt;Watch in action&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Sourse code could be found &lt;a href=&quot;https://github.com/gitpash/Front-End-Dev-for-FCC/tree/master/Intermediate_Front-End/wiki-view&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/wiki.png&quot; alt=&quot;that's how it look like&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Now I’m working on FCC pojects for claiming the Front-End Certificate</summary></entry><entry><title type="html">local_weather</title><link href="http://localhost:4000/2017/04/10/weather-FCC.html" rel="alternate" type="text/html" title="local_weather" /><published>2017-04-10T00:00:00+03:00</published><updated>2017-04-10T00:00:00+03:00</updated><id>http://localhost:4000/2017/04/10/weather-FCC</id><content type="html" xml:base="http://localhost:4000/2017/04/10/weather-FCC.html">&lt;p&gt;This is one of the FreeCodeCamp challenges to claim Front-End intermediate certificate. Include work with DarkSky API&lt;/p&gt;

&lt;p&gt;which could be found &lt;a href=&quot;https://darksky.net/dev/&quot; title=&quot;DarkSky API signUp&quot; target=&quot;_blank&quot;&gt;Here&lt;/a&gt; and slightly touch &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/&quot; title=&quot;Using Fetch API&quot; target=&quot;_blank&quot;&gt;fetch request&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Response/&quot; title=&quot;Response MDN&quot; target=&quot;_blank&quot;&gt;Response&lt;/a&gt; method. 
For some reason representing fully-functional bundle of html-css-js including fetched API and location manipulations causes weird post behaivior. So I just insert screenshot and provide a &lt;a href=&quot;http://codepen.io/pavelluz/full/MpaBKM/&quot; title=&quot;link to codepen.io&quot; target=&quot;_blank&quot;&gt;Reference&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/1.png&quot; alt=&quot;that's how it look like&quot; class=&quot;img-responsive&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><category term="FCC" /><summary type="html">This is one of the FreeCodeCamp challenges to claim Front-End intermediate certificate. Include work with DarkSky API</summary></entry><entry><title type="html">break-out-game</title><link href="http://localhost:4000/2017/03/08/simple-game.html" rel="alternate" type="text/html" title="break-out-game" /><published>2017-03-08T00:00:00+03:00</published><updated>2017-03-08T00:00:00+03:00</updated><id>http://localhost:4000/2017/03/08/simple-game</id><content type="html" xml:base="http://localhost:4000/2017/03/08/simple-game.html">&lt;p&gt;Building this simple BreakOut game followed by nice MDN instructions, the game is dead-simple but somehow help me to understand some canvas basics and simple UI interactions.&lt;/p&gt;

&lt;html&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot; /&gt;
  &lt;title&gt;2D Breakout Game&lt;/title&gt;
  &lt;style&gt;
    .start-btn {
      display: flex;
      justify-content: center;
    }
    * { padding: 0; margin: 0; }
    canvas {  background: Bisque;
              display: block;
              margin: 0 auto;
            }
    @media screen and (max-width: 600px) {
    canvas {
      width: 400px;
      height: 250px;
      }
  }
  &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;div class=&quot;start-btn&quot;&gt;
&lt;input type=&quot;button&quot; value=&quot;Start the Game&quot; class=&quot;btn&quot; /&gt;
&lt;/div&gt;
&lt;canvas id=&quot;gameCanvas&quot; width=&quot;600&quot; height=&quot;400&quot;&gt;&lt;/canvas&gt;

&lt;script src=&quot;/assets/js/game.js&quot;&gt;
&lt;/script&gt;
&lt;/body&gt;


&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
&lt;script&gt;

/**
*  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.
*  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/
/*
var disqus_config = function () {
this.page.url = PAGE_URL;  // Replace PAGE_URL with your page's canonical URL variable
this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable
};
*/
(function() { // DON'T EDIT BELOW THIS LINE
var d = document, s = d.createElement('script');
s.src = 'https://this-blog.disqus.com/embed.js';
s.setAttribute('data-timestamp', +new Date());
(d.head || d.body).appendChild(s);
})();
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;https://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;/html&gt;</content><author><name>Pavel Luzanov</name></author><summary type="html">Building this simple BreakOut game followed by nice MDN instructions, the game is dead-simple but somehow help me to understand some canvas basics and simple UI interactions.</summary></entry></feed>